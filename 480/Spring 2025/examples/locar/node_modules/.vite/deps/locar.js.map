{
  "version": 3,
  "sources": ["../../locar/dist/locar.es.js"],
  "sourcesContent": ["var j = (r) => {\n  throw TypeError(r);\n};\nvar F = (r, t, e) => t.has(r) || j(\"Cannot \" + e);\nvar n = (r, t, e) => (F(r, t, \"read from private field\"), e ? e.call(r) : t.get(r)), m = (r, t, e) => t.has(r) ? j(\"Cannot add the same private member more than once\") : t instanceof WeakSet ? t.add(r) : t.set(r, e), d = (r, t, e, i) => (F(r, t, \"write to private field\"), i ? i.call(r, e) : t.set(r, e), e), v = (r, t, e) => (F(r, t, \"access private method\"), e);\nvar q = (r, t, e, i) => ({\n  set _(o) {\n    d(r, t, o, e);\n  },\n  get _() {\n    return n(r, t, i);\n  }\n});\nimport * as f from \"three\";\nimport { Vector3 as Z, Euler as N, Quaternion as _, EventDispatcher as B, MathUtils as D } from \"three\";\nvar P, U, G, X, Q;\nclass K {\n  /**\n   * Create a SphMercProjection.\n   */\n  constructor() {\n    m(this, P);\n    this.EARTH = 4007501668e-2, this.HALF_EARTH = 2003750834e-2;\n  }\n  /**\n   * Project a longitude and latitude into Spherical Mercator.\n   * @param {number} lon - the longitude.\n   * @param {number} lat - the latitude.\n   * @return {Array} Two-member array containing easting and northing.\n   */\n  project(t, e) {\n    return [v(this, P, U).call(this, t), v(this, P, G).call(this, e)];\n  }\n  /**\n   * Unproject a Spherical Mercator easting and northing.\n   * @param {Array} projected - Two-member array containing easting and northing\n   * @return {Array} Two-member array containing longitude and latitude \n   */\n  unproject(t) {\n    return [v(this, P, X).call(this, t[0]), v(this, P, Q).call(this, t[1])];\n  }\n  /**\n   * Return the projection's ID.\n   * @return {string} The value \"epsg:3857\".\n   */\n  getID() {\n    return \"epsg:3857\";\n  }\n}\nP = new WeakSet(), U = function(t) {\n  return t / 180 * this.HALF_EARTH;\n}, G = function(t) {\n  var e = Math.log(Math.tan((90 + t) * Math.PI / 360)) / (Math.PI / 180);\n  return e * this.HALF_EARTH / 180;\n}, X = function(t) {\n  return t / this.HALF_EARTH * 180;\n}, Q = function(t) {\n  var e = t / this.HALF_EARTH * 180;\n  return e = 180 / Math.PI * (2 * Math.atan(Math.exp(e * Math.PI / 180)) - Math.PI / 2), e;\n};\nvar R, A, T, x, L, C, E, I, b, O, p, S, V, W, Y;\nclass st {\n  /**\n   * @param {THREE.Scene} scene - The Three.js scene to use.\n   * @param {THREE.Camera} camera - The Three.js camera to use. Should usually \n   * be a THREE.PerspectiveCamera.\n   * @param {Object} options - Initialisation options for the GPS; see\n   * setGpsOptions() below.\n   * @param {Object} serverLogger - an object which can optionally log GPS position to a server for debugging. null by default, so no logging will be done. This object should implement a sendData() method to send data (2nd arg) to a given endpoint (1st arg). Please see source code for details. Ensure you comply with privacy laws (GDPR or equivalent) if implementing this.\n   */\n  constructor(t, e, i = {}, o = null) {\n    m(this, p);\n    m(this, R);\n    m(this, A);\n    m(this, T);\n    m(this, x);\n    m(this, L);\n    m(this, C);\n    m(this, E);\n    m(this, I);\n    m(this, b);\n    m(this, O);\n    this.scene = t, this.camera = e, d(this, R, new K()), d(this, A, {}), d(this, T, null), d(this, x, 0), d(this, L, 100), d(this, C, null), this.setGpsOptions(i), d(this, E, null), d(this, I, 0), d(this, b, 0), d(this, O, o);\n  }\n  /**\n   * Set the projection to use.\n   * @param {Object} any object which includes a project() method \n   * taking longitude and latitude as arguments and returning an array \n   * containing easting and northing.\n   */\n  setProjection(t) {\n    d(this, R, t);\n  }\n  /**\n   * Set the GPS options.\n   * @param {Object} object containing gpsMinDistance and/or gpsMinAccuracy\n   * properties. The former specifies the number of metres which the device\n   * must move to process a new GPS reading, and the latter specifies the \n   * minimum accuracy, in metres, for a GPS reading to be counted.\n   */\n  setGpsOptions(t = {}) {\n    t.gpsMinDistance !== void 0 && d(this, x, t.gpsMinDistance), t.gpsMinAccuracy !== void 0 && d(this, L, t.gpsMinAccuracy);\n  }\n  /**\n   * Start the GPS on a real device\n   * @return {boolean} code indicating whether the GPS was started successfully.\n   * GPS errors can be handled by handling the gpserror event.\n   */\n  async startGps() {\n    if (n(this, O)) {\n      const e = await (await n(this, O).sendData(\"/gps/start\", {\n        gpsMinDistance: n(this, x),\n        gpsMinAccuracy: n(this, L)\n      })).json();\n      d(this, b, e.session);\n    }\n    return n(this, C) === null ? (d(this, C, navigator.geolocation.watchPosition(\n      (t) => {\n        v(this, p, W).call(this, t);\n      },\n      (t) => {\n        n(this, A).gpserror ? n(this, A).gpserror(t.code) : alert(`GPS error: code ${t.code}`);\n      },\n      {\n        enableHighAccuracy: !0\n      }\n    )), !0) : !1;\n  }\n  /**\n   * Stop the GPS on a real device\n   * @return {boolean} true if the GPS was stopped, false if it could not be\n   * stopped (i.e. it was never started).\n   */\n  stopGps() {\n    return n(this, C) !== null ? (navigator.geolocation.clearWatch(n(this, C)), d(this, C, null), !0) : !1;\n  }\n  /**\n   * Send a fake GPS signal. Useful for testing on a desktop or laptop.\n   * @param {number} lon - The longitude.\n   * @param {number} lat - The latitude.\n   * @param {number} elev - The elevation in metres. (optional, set to null\n   * for no elevation).\n   * @param {number} acc - The accuracy of the GPS reading in metres. May be\n   * ignored if lower than the specified minimum accuracy.\n   */\n  fakeGps(t, e, i = null, o = 0) {\n    i !== null && this.setElevation(i), v(this, p, W).call(this, {\n      coords: {\n        longitude: t,\n        latitude: e,\n        accuracy: o\n      }\n    });\n  }\n  /**\n   * Convert longitude and latitude to three.js/WebGL world coordinates.\n   * Uses the specified projection, and negates the northing (in typical\n   * projections, northings increase northwards, but in the WebGL coordinate\n   * system, we face negative z if the camera is at the origin with default\n   * rotation).\n   * @param {number} lon - The longitude.\n   * @param {number} lat - The latitude.\n   * @return {Array} a two member array containing the WebGL x and z coordinates\n   */\n  lonLatToWorldCoords(t, e) {\n    const i = n(this, R).project(t, e);\n    if (n(this, E))\n      i[0] -= n(this, E)[0], i[1] -= n(this, E)[1];\n    else\n      throw \"No initial position determined\";\n    return [i[0], -i[1]];\n  }\n  /**\n   * Add a new AR object at a given latitude, longitude and elevation.\n   * @param {THREE.Mesh} object the object\n   * @param {number} lon - the longitude.\n   * @param {number} lat - the latitude.\n   * @param {number} elev - the elevation in metres \n   * (if not specified, 0 is assigned)\n   * @param {Object} properties - properties describing the object (for example,\n   * the contents of the GeoJSON properties field).\n   */\n  add(t, e, i, o, u = {}) {\n    var g;\n    t.properties = u, v(this, p, S).call(this, t, e, i, o), this.scene.add(t), (g = n(this, O)) == null || g.sendData(\"/object/new\", {\n      position: t.position,\n      x: t.position.x,\n      z: t.position.z,\n      session: n(this, b),\n      properties: u\n    });\n  }\n  /**\n   * Set the elevation (y coordinate) of the camera.\n   * @param {number} elev - the elevation in metres.\n   */\n  setElevation(t) {\n    this.camera.position.y = t;\n  }\n  /**\n   * Add an event handler.\n   * Currently-understood events: \"gpsupdate\" and \"gpserror\".\n   * The former fires when a GPS update is received, and is passed the\n   * standard Geolocation API position object, along with the distance moved\n   * since the last GPS update in metres.\n   * The latter fires when a GPS error is generated, and is passed the\n   * standard Geolocation API numerical error code.\n   * @param {string} eventName - the event to handle.\n   * @param {Function} eventHandler - the event handler function.\n   * @listens LocationBased#gpsupdate\n   * @listens LocationBased#gpserror\n   */\n  on(t, e) {\n    n(this, A)[t] = e;\n  }\n}\nR = new WeakMap(), A = new WeakMap(), T = new WeakMap(), x = new WeakMap(), L = new WeakMap(), C = new WeakMap(), E = new WeakMap(), I = new WeakMap(), b = new WeakMap(), O = new WeakMap(), p = new WeakSet(), S = function(t, e, i, o) {\n  const u = this.lonLatToWorldCoords(e, i);\n  o !== void 0 && (t.position.y = o), [t.position.x, t.position.z] = u;\n}, V = function(t, e) {\n  d(this, E, n(this, R).project(t, e));\n}, W = function(t) {\n  var i, o, u;\n  let e = Number.MAX_VALUE;\n  q(this, I)._++, (i = n(this, O)) == null || i.sendData(\"/gps/new\", {\n    gpsCount: n(this, I),\n    lat: t.coords.latitude,\n    lon: t.coords.longitude,\n    acc: t.coords.accuracy,\n    session: n(this, b)\n  }), t.coords.accuracy <= n(this, L) && (n(this, T) === null ? d(this, T, {\n    latitude: t.coords.latitude,\n    longitude: t.coords.longitude\n  }) : e = v(this, p, Y).call(this, n(this, T), t.coords), e >= n(this, x) && (n(this, T).longitude = t.coords.longitude, n(this, T).latitude = t.coords.latitude, n(this, E) || (v(this, p, V).call(this, t.coords.longitude, t.coords.latitude), (o = n(this, O)) == null || o.sendData(\"/worldorigin/new\", {\n    gpsCount: n(this, I),\n    lat: t.coords.latitude,\n    lon: t.coords.longitude,\n    session: n(this, b),\n    initialPosition: n(this, E)\n  })), v(this, p, S).call(this, this.camera, t.coords.longitude, t.coords.latitude), (u = n(this, O)) == null || u.sendData(\"/gps/accepted\", {\n    gpsCount: n(this, I),\n    cameraX: this.camera.position.x,\n    cameraZ: this.camera.position.z,\n    session: n(this, b),\n    distMoved: e\n  }), n(this, A).gpsupdate && n(this, A).gpsupdate(t, e)));\n}, /**\n * Calculate haversine distance between two lat/lon pairs.\n *\n * Taken from original A-Frame AR.js location-based components\n */\nY = function(t, e) {\n  const i = f.MathUtils.degToRad(e.longitude - t.longitude), o = f.MathUtils.degToRad(e.latitude - t.latitude), u = Math.sin(o / 2) * Math.sin(o / 2) + Math.cos(f.MathUtils.degToRad(t.latitude)) * Math.cos(f.MathUtils.degToRad(e.latitude)) * (Math.sin(i / 2) * Math.sin(i / 2));\n  return 2 * Math.atan2(Math.sqrt(u), Math.sqrt(1 - u)) * 6371e3;\n};\nclass ot {\n  /**\n   * Create a WebcamRenderer.\n   * @param {THREE.WebGLRenderer} renderer - the Three.js renderer.\n   * @param {string} videoElementSelector - selector to obtain the HTML video \n   * element to render the webcam feed. If a falsy value (e.g. null or \n   * undefined), a video element will be created.\n   * @options {Object} - options to use for initialising the camera. Currently\n   * width and height properties are understood.\n   */\n  constructor(t, e, i) {\n    this.renderer = t, this.renderer.autoClear = !1, this.sceneWebcam = new f.Scene();\n    let o;\n    e ? o = document.querySelector(e) : (o = document.createElement(\"video\"), o.setAttribute(\"autoplay\", !0), o.setAttribute(\"playsinline\", !0), o.style.display = \"none\", document.body.appendChild(o)), this.geom = new f.PlaneGeometry(), this.texture = new f.VideoTexture(o), this.material = new f.MeshBasicMaterial({ map: this.texture });\n    const u = new f.Mesh(this.geom, this.material);\n    if (this.sceneWebcam.add(u), this.cameraWebcam = new f.OrthographicCamera(\n      -0.5,\n      0.5,\n      0.5,\n      -0.5,\n      0,\n      10\n    ), navigator.mediaDevices && navigator.mediaDevices.getUserMedia) {\n      const g = {\n        video: {\n          width: (i == null ? void 0 : i.width) || 1280,\n          height: (i == null ? void 0 : i.height) || 720,\n          facingMode: \"environment\"\n        }\n      };\n      navigator.mediaDevices.getUserMedia(g).then((w) => {\n        console.log(\"using the webcam successfully...\"), o.srcObject = w, o.play();\n      }).catch((w) => {\n        setTimeout(() => {\n          alert(\n            `Webcam Error\nName: ` + w.name + `\nMessage: ` + w.message\n          );\n        }, 1e3);\n      });\n    } else\n      setTimeout(() => {\n        alert(\"sorry - media devices API not supported\");\n      }, 1e3);\n  }\n  /**\n   * Update the webcam.\n   * Should be called from your Three.js rendering (animation) function.\n   */\n  update() {\n    this.renderer.clear(), this.renderer.render(this.sceneWebcam, this.cameraWebcam), this.renderer.clearDepth();\n  }\n  /**\n   * Free up the memory associated with the webcam.\n   * Should be called when your application closes.\n   */\n  dispose() {\n    this.material.dispose(), this.texture.dispose(), this.geom.dispose();\n  }\n}\nconst k = navigator.userAgent.match(/iPhone|iPad|iPod/i) || /Macintosh/i.test(navigator.userAgent) && navigator.maxTouchPoints != null && navigator.maxTouchPoints > 1, $ = new Z(0, 0, 1), z = new N(), J = new _(), tt = new _(-Math.sqrt(0.5), 0, 0, Math.sqrt(0.5)), et = { type: \"change\" };\nclass at extends B {\n  /**\n   * Create an instance of DeviceOrientationControls.\n   * @param {Object} object - the object to attach the controls to\n   * (usually your Three.js camera)\n   */\n  constructor(t) {\n    super(), window.isSecureContext === !1 && console.error(\n      \"THREE.DeviceOrientationControls: DeviceOrientationEvent is only available in secure contexts (https)\"\n    );\n    const e = this, i = 1e-6, o = new _();\n    this.object = t, this.object.rotation.reorder(\"YXZ\"), this.enabled = !0, this.deviceOrientation = null, this.screenOrientation = 0, this.alphaOffset = 0, this.initialOffset = null, this.TWO_PI = 2 * Math.PI, this.HALF_PI = 0.5 * Math.PI, this.orientationChangeEventName = \"ondeviceorientationabsolute\" in window ? \"deviceorientationabsolute\" : \"deviceorientation\", this.smoothingFactor = 1;\n    const u = function({\n      alpha: s,\n      beta: c,\n      gamma: h,\n      webkitCompassHeading: a\n    }) {\n      if (k) {\n        const l = 360 - a;\n        e.alphaOffset = D.degToRad(l - s), e.deviceOrientation = { alpha: s, beta: c, gamma: h, webkitCompassHeading: a };\n      } else\n        s < 0 && (s += 360), e.deviceOrientation = { alpha: s, beta: c, gamma: h };\n      window.dispatchEvent(\n        new CustomEvent(\"camera-rotation-change\", {\n          detail: { cameraRotation: t.rotation }\n        })\n      );\n    }, g = function() {\n      e.screenOrientation = window.orientation || 0;\n    }, w = function(s, c, h, a, l) {\n      z.set(h, c, -a, \"YXZ\"), s.setFromEuler(z), s.multiply(tt), s.multiply(J.setFromAxisAngle($, -l));\n    };\n    this.connect = function() {\n      g(), window.DeviceOrientationEvent !== void 0 && typeof window.DeviceOrientationEvent.requestPermission == \"function\" ? window.DeviceOrientationEvent.requestPermission().then((s) => {\n        s === \"granted\" && (window.addEventListener(\n          \"orientationchange\",\n          g\n        ), window.addEventListener(\n          e.orientationChangeEventName,\n          u\n        ));\n      }).catch(function(s) {\n        console.error(\n          \"THREE.DeviceOrientationControls: Unable to use DeviceOrientation API:\",\n          s\n        );\n      }) : (window.addEventListener(\n        \"orientationchange\",\n        g\n      ), window.addEventListener(\n        e.orientationChangeEventName,\n        u\n      )), e.enabled = !0;\n    }, this.disconnect = function() {\n      window.removeEventListener(\n        \"orientationchange\",\n        g\n      ), window.removeEventListener(\n        e.orientationChangeEventName,\n        u\n      ), e.enabled = !1, e.initialOffset = !1, e.deviceOrientation = null;\n    }, this.update = function({ theta: s = 0 } = { theta: 0 }) {\n      if (e.enabled === !1) return;\n      const c = e.deviceOrientation;\n      if (c) {\n        let h = c.alpha ? D.degToRad(c.alpha) + e.alphaOffset : 0, a = c.beta ? D.degToRad(c.beta) : 0, l = c.gamma ? D.degToRad(c.gamma) : 0;\n        const H = e.screenOrientation ? D.degToRad(e.screenOrientation) : 0;\n        if (k) {\n          const y = new _();\n          w(y, h, a, l, H);\n          const M = new N().setFromQuaternion(\n            y,\n            \"YXZ\"\n          );\n          console.log(M.x, M.y, M.z), M.y = D.degToRad(\n            360 - c.webkitCompassHeading\n          ), y.setFromEuler(M), e.object.quaternion.copy(y);\n        } else {\n          if (this.smoothingFactor < 1) {\n            if (this.lastOrientation) {\n              const y = this.smoothingFactor;\n              h = this._getSmoothedAngle(\n                h,\n                this.lastOrientation.alpha,\n                y\n              ), a = this._getSmoothedAngle(\n                a + Math.PI,\n                this.lastOrientation.beta,\n                y\n              ), l = this._getSmoothedAngle(\n                l + this.HALF_PI,\n                this.lastOrientation.gamma,\n                y,\n                Math.PI\n              );\n            } else\n              a += Math.PI, l += this.HALF_PI;\n            this.lastOrientation = {\n              alpha: h,\n              beta: a,\n              gamma: l\n            };\n          }\n          w(\n            e.object.quaternion,\n            h + s,\n            this.smoothingFactor < 1 ? a - Math.PI : a,\n            this.smoothingFactor < 1 ? l - this.HALF_PI : l,\n            H\n          );\n        }\n        8 * (1 - o.dot(e.object.quaternion)) > i && (o.copy(e.object.quaternion), e.dispatchEvent(et));\n      }\n    }, this._orderAngle = function(s, c, h = this.TWO_PI) {\n      return c > s && Math.abs(c - s) < h / 2 || s > c && Math.abs(c - s) > h / 2 ? { left: s, right: c } : { left: c, right: s };\n    }, this._getSmoothedAngle = function(s, c, h, a = this.TWO_PI) {\n      const l = this._orderAngle(s, c, a), H = l.left, y = l.right;\n      l.left = 0, l.right -= H, l.right < 0 && (l.right += a);\n      let M = y == c ? (1 - h) * l.right + h * l.left : h * l.right + (1 - h) * l.left;\n      return M += H, M >= a && (M -= a), M;\n    }, this.updateAlphaOffset = function() {\n      e.initialOffset = !1;\n    }, this.dispose = function() {\n      e.disconnect();\n    }, this.getAlpha = function() {\n      const { deviceOrientation: s } = e;\n      return s && s.alpha ? D.degToRad(s.alpha) + e.alphaOffset : 0;\n    }, this.getBeta = function() {\n      const { deviceOrientation: s } = e;\n      return s && s.beta ? D.degToRad(s.beta) : 0;\n    }, window.DeviceOrientationEvent !== void 0 && typeof window.DeviceOrientationEvent.requestPermission == \"function\" ? this.initPermissionDialog() : this.connect();\n  }\n  // Provide gesture before initialising device orientation controls\n  // From PR #659 on the main AR.js repo\n  // Thanks to @ma2yama\n  initPermissionDialog() {\n    const t = document.createElement(\"div\"), e = document.createElement(\"div\"), i = document.createElement(\"div\"), o = document.createElement(\"div\");\n    document.body.appendChild(t);\n    const u = {\n      display: \"flex\",\n      position: \"fixed\",\n      top: 0,\n      left: 0,\n      width: \"100%\",\n      height: \"100%\",\n      zIndex: 1,\n      backgroundColor: \"rgba(0,0,0,0.6)\",\n      justifyContent: \"center\",\n      alignItems: \"center\"\n    }, g = {\n      backgroundColor: \"white\",\n      padding: \"6px\",\n      borderRadius: \"3px\",\n      width: \"36rem\",\n      height: \"24rem\"\n    }, w = {\n      width: \"100%\",\n      height: \"70%\",\n      display: \"flex\",\n      justifyContent: \"center\",\n      alignItems: \"center\"\n    }, s = {\n      display: \"inline-flex\",\n      width: \"100%\",\n      height: \"30%\",\n      justifyContent: \"center\",\n      alignItems: \"center\"\n    };\n    for (let a in u)\n      t.style[a] = u[a];\n    for (let a in g)\n      e.style[a] = g[a];\n    for (let a in w)\n      i.style[a] = w[a];\n    for (let a in s)\n      o.style[a] = s[a];\n    t.appendChild(e), e.appendChild(i), e.appendChild(o), i.innerHTML = '<div style=\"font-size: 24pt; margin: 1rem;\">This immersive website requires access to your device motion sensors.</div>';\n    const c = () => {\n      this.connect(), t.style.display = \"none\";\n    }, h = document.createElement(\"button\");\n    h.addEventListener(\"click\", c), h.style.width = \"50%\", h.style.height = \"80%\", h.style.fontSize = \"20pt\", h.appendChild(document.createTextNode(\"OK\")), o.appendChild(h), document.body.appendChild(t);\n  }\n}\nclass rt {\n  /**\n   * Create a ClickHandler.\n   * @param {THREE.WebGLRenderer} - The Three.js renderer on which the click\n   * events will be handled.\n   */\n  constructor(t) {\n    this.raycaster = new f.Raycaster(), this.normalisedMousePosition = new f.Vector2(null, null), t.domElement.addEventListener(\"click\", (e) => {\n      this.normalisedMousePosition.set(\n        e.clientX / t.domElement.clientWidth * 2 - 1,\n        -(e.clientY / t.domElement.clientHeight * 2) + 1\n      );\n    });\n  }\n  /**\n   * Cast a ray into the scene to detect objects.\n   * @param {THREE.Camera} - The active Three.js camera, from which the ray\n   * will be cast.\n   * @param {THREE.Scene} - The active Three.js scene, which the ray will be\n   * cast into.\n   * @return {Array} - array of all intersected objects.\n   */\n  raycast(t, e) {\n    if (this.normalisedMousePosition.x !== null && this.normalisedMousePosition.y !== null) {\n      this.raycaster.setFromCamera(this.normalisedMousePosition, t);\n      const i = this.raycaster.intersectObjects(e.children, !1);\n      return this.normalisedMousePosition.set(null, null), i;\n    }\n    return [];\n  }\n}\nexport {\n  rt as ClickHandler,\n  at as DeviceOrientationControls,\n  st as LocationBased,\n  K as SphMercProjection,\n  ot as WebcamRenderer\n};\n"],
  "mappings": ";;;;;;;;;;;;;;;;;AAAA,IAAI,IAAI,CAAC,MAAM;AACb,QAAM,UAAU,CAAC;AACnB;AACA,IAAI,IAAI,CAAC,GAAG,GAAG,MAAM,EAAE,IAAI,CAAC,KAAK,EAAE,YAAY,CAAC;AAChD,IAAI,IAAI,CAAC,GAAG,GAAG,OAAO,EAAE,GAAG,GAAG,yBAAyB,GAAG,IAAI,EAAE,KAAK,CAAC,IAAI,EAAE,IAAI,CAAC;AAAjF,IAAqF,IAAI,CAAC,GAAG,GAAG,MAAM,EAAE,IAAI,CAAC,IAAI,EAAE,mDAAmD,IAAI,aAAa,UAAU,EAAE,IAAI,CAAC,IAAI,EAAE,IAAI,GAAG,CAAC;AAAtN,IAAyN,IAAI,CAAC,GAAG,GAAG,GAAG,OAAO,EAAE,GAAG,GAAG,wBAAwB,GAAG,IAAI,EAAE,KAAK,GAAG,CAAC,IAAI,EAAE,IAAI,GAAG,CAAC,GAAG;AAAjT,IAAqT,IAAI,CAAC,GAAG,GAAG,OAAO,EAAE,GAAG,GAAG,uBAAuB,GAAG;AACzW,IAAI,IAAI,CAAC,GAAG,GAAG,GAAG,OAAO;AAAA,EACvB,IAAI,EAAE,GAAG;AACP,MAAE,GAAG,GAAG,GAAG,CAAC;AAAA,EACd;AAAA,EACA,IAAI,IAAI;AACN,WAAO,EAAE,GAAG,GAAG,CAAC;AAAA,EAClB;AACF;AAGA,IAAI;AAAJ,IAAO;AAAP,IAAU;AAAV,IAAa;AAAb,IAAgB;AAChB,IAAM,IAAN,MAAQ;AAAA;AAAA;AAAA;AAAA,EAIN,cAAc;AACZ,MAAE,MAAM,CAAC;AACT,SAAK,QAAQ,eAAe,KAAK,aAAa;AAAA,EAChD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAOA,QAAQ,GAAG,GAAG;AACZ,WAAO,CAAC,EAAE,MAAM,GAAG,CAAC,EAAE,KAAK,MAAM,CAAC,GAAG,EAAE,MAAM,GAAG,CAAC,EAAE,KAAK,MAAM,CAAC,CAAC;AAAA,EAClE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAMA,UAAU,GAAG;AACX,WAAO,CAAC,EAAE,MAAM,GAAG,CAAC,EAAE,KAAK,MAAM,EAAE,CAAC,CAAC,GAAG,EAAE,MAAM,GAAG,CAAC,EAAE,KAAK,MAAM,EAAE,CAAC,CAAC,CAAC;AAAA,EACxE;AAAA;AAAA;AAAA;AAAA;AAAA,EAKA,QAAQ;AACN,WAAO;AAAA,EACT;AACF;AACA,IAAI,oBAAI,QAAQ,GAAG,IAAI,SAAS,GAAG;AACjC,SAAO,IAAI,MAAM,KAAK;AACxB,GAAG,IAAI,SAAS,GAAG;AACjB,MAAI,IAAI,KAAK,IAAI,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,GAAG,CAAC,KAAK,KAAK,KAAK;AAClE,SAAO,IAAI,KAAK,aAAa;AAC/B,GAAG,IAAI,SAAS,GAAG;AACjB,SAAO,IAAI,KAAK,aAAa;AAC/B,GAAG,IAAI,SAAS,GAAG;AACjB,MAAI,IAAI,IAAI,KAAK,aAAa;AAC9B,SAAO,IAAI,MAAM,KAAK,MAAM,IAAI,KAAK,KAAK,KAAK,IAAI,IAAI,KAAK,KAAK,GAAG,CAAC,IAAI,KAAK,KAAK,IAAI;AACzF;AACA,IAAI;AAAJ,IAAO;AAAP,IAAU;AAAV,IAAa;AAAb,IAAgB;AAAhB,IAAmB;AAAnB,IAAsB;AAAtB,IAAyB;AAAzB,IAA4B;AAA5B,IAA+B;AAA/B,IAAkC;AAAlC,IAAqC;AAArC,IAAwC;AAAxC,IAA2C;AAA3C,IAA8C;AAC9C,IAAM,KAAN,MAAS;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EASP,YAAY,GAAG,GAAG,IAAI,CAAC,GAAG,IAAI,MAAM;AAClC,MAAE,MAAM,CAAC;AACT,MAAE,MAAM,CAAC;AACT,MAAE,MAAM,CAAC;AACT,MAAE,MAAM,CAAC;AACT,MAAE,MAAM,CAAC;AACT,MAAE,MAAM,CAAC;AACT,MAAE,MAAM,CAAC;AACT,MAAE,MAAM,CAAC;AACT,MAAE,MAAM,CAAC;AACT,MAAE,MAAM,CAAC;AACT,MAAE,MAAM,CAAC;AACT,SAAK,QAAQ,GAAG,KAAK,SAAS,GAAG,EAAE,MAAM,GAAG,IAAI,EAAE,CAAC,GAAG,EAAE,MAAM,GAAG,CAAC,CAAC,GAAG,EAAE,MAAM,GAAG,IAAI,GAAG,EAAE,MAAM,GAAG,CAAC,GAAG,EAAE,MAAM,GAAG,GAAG,GAAG,EAAE,MAAM,GAAG,IAAI,GAAG,KAAK,cAAc,CAAC,GAAG,EAAE,MAAM,GAAG,IAAI,GAAG,EAAE,MAAM,GAAG,CAAC,GAAG,EAAE,MAAM,GAAG,CAAC,GAAG,EAAE,MAAM,GAAG,CAAC;AAAA,EAC/N;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAOA,cAAc,GAAG;AACf,MAAE,MAAM,GAAG,CAAC;AAAA,EACd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAQA,cAAc,IAAI,CAAC,GAAG;AACpB,MAAE,mBAAmB,UAAU,EAAE,MAAM,GAAG,EAAE,cAAc,GAAG,EAAE,mBAAmB,UAAU,EAAE,MAAM,GAAG,EAAE,cAAc;AAAA,EACzH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAMA,MAAM,WAAW;AACf,QAAI,EAAE,MAAM,CAAC,GAAG;AACd,YAAM,IAAI,OAAO,MAAM,EAAE,MAAM,CAAC,EAAE,SAAS,cAAc;AAAA,QACvD,gBAAgB,EAAE,MAAM,CAAC;AAAA,QACzB,gBAAgB,EAAE,MAAM,CAAC;AAAA,MAC3B,CAAC,GAAG,KAAK;AACT,QAAE,MAAM,GAAG,EAAE,OAAO;AAAA,IACtB;AACA,WAAO,EAAE,MAAM,CAAC,MAAM,QAAQ,EAAE,MAAM,GAAG,UAAU,YAAY;AAAA,MAC7D,CAAC,MAAM;AACL,UAAE,MAAM,GAAG,CAAC,EAAE,KAAK,MAAM,CAAC;AAAA,MAC5B;AAAA,MACA,CAAC,MAAM;AACL,UAAE,MAAM,CAAC,EAAE,WAAW,EAAE,MAAM,CAAC,EAAE,SAAS,EAAE,IAAI,IAAI,MAAM,mBAAmB,EAAE,IAAI,EAAE;AAAA,MACvF;AAAA,MACA;AAAA,QACE,oBAAoB;AAAA,MACtB;AAAA,IACF,CAAC,GAAG,QAAM;AAAA,EACZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAMA,UAAU;AACR,WAAO,EAAE,MAAM,CAAC,MAAM,QAAQ,UAAU,YAAY,WAAW,EAAE,MAAM,CAAC,CAAC,GAAG,EAAE,MAAM,GAAG,IAAI,GAAG,QAAM;AAAA,EACtG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAUA,QAAQ,GAAG,GAAG,IAAI,MAAM,IAAI,GAAG;AAC7B,UAAM,QAAQ,KAAK,aAAa,CAAC,GAAG,EAAE,MAAM,GAAG,CAAC,EAAE,KAAK,MAAM;AAAA,MAC3D,QAAQ;AAAA,QACN,WAAW;AAAA,QACX,UAAU;AAAA,QACV,UAAU;AAAA,MACZ;AAAA,IACF,CAAC;AAAA,EACH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAWA,oBAAoB,GAAG,GAAG;AACxB,UAAM,IAAI,EAAE,MAAM,CAAC,EAAE,QAAQ,GAAG,CAAC;AACjC,QAAI,EAAE,MAAM,CAAC;AACX,QAAE,CAAC,KAAK,EAAE,MAAM,CAAC,EAAE,CAAC,GAAG,EAAE,CAAC,KAAK,EAAE,MAAM,CAAC,EAAE,CAAC;AAAA;AAE3C,YAAM;AACR,WAAO,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC;AAAA,EACrB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAWA,IAAI,GAAG,GAAG,GAAG,GAAG,IAAI,CAAC,GAAG;AACtB,QAAI;AACJ,MAAE,aAAa,GAAG,EAAE,MAAM,GAAG,CAAC,EAAE,KAAK,MAAM,GAAG,GAAG,GAAG,CAAC,GAAG,KAAK,MAAM,IAAI,CAAC,IAAI,IAAI,EAAE,MAAM,CAAC,MAAM,QAAQ,EAAE,SAAS,eAAe;AAAA,MAC/H,UAAU,EAAE;AAAA,MACZ,GAAG,EAAE,SAAS;AAAA,MACd,GAAG,EAAE,SAAS;AAAA,MACd,SAAS,EAAE,MAAM,CAAC;AAAA,MAClB,YAAY;AAAA,IACd,CAAC;AAAA,EACH;AAAA;AAAA;AAAA;AAAA;AAAA,EAKA,aAAa,GAAG;AACd,SAAK,OAAO,SAAS,IAAI;AAAA,EAC3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAcA,GAAG,GAAG,GAAG;AACP,MAAE,MAAM,CAAC,EAAE,CAAC,IAAI;AAAA,EAClB;AACF;AACA,IAAI,oBAAI,QAAQ,GAAG,IAAI,oBAAI,QAAQ,GAAG,IAAI,oBAAI,QAAQ,GAAG,IAAI,oBAAI,QAAQ,GAAG,IAAI,oBAAI,QAAQ,GAAG,IAAI,oBAAI,QAAQ,GAAG,IAAI,oBAAI,QAAQ,GAAG,IAAI,oBAAI,QAAQ,GAAG,IAAI,oBAAI,QAAQ,GAAG,IAAI,oBAAI,QAAQ,GAAG,IAAI,oBAAI,QAAQ,GAAG,IAAI,SAAS,GAAG,GAAG,GAAG,GAAG;AACxO,QAAM,IAAI,KAAK,oBAAoB,GAAG,CAAC;AACvC,QAAM,WAAW,EAAE,SAAS,IAAI,IAAI,CAAC,EAAE,SAAS,GAAG,EAAE,SAAS,CAAC,IAAI;AACrE,GAAG,IAAI,SAAS,GAAG,GAAG;AACpB,IAAE,MAAM,GAAG,EAAE,MAAM,CAAC,EAAE,QAAQ,GAAG,CAAC,CAAC;AACrC,GAAG,IAAI,SAAS,GAAG;AACjB,MAAI,GAAG,GAAG;AACV,MAAI,IAAI,OAAO;AACf,IAAE,MAAM,CAAC,EAAE,MAAM,IAAI,EAAE,MAAM,CAAC,MAAM,QAAQ,EAAE,SAAS,YAAY;AAAA,IACjE,UAAU,EAAE,MAAM,CAAC;AAAA,IACnB,KAAK,EAAE,OAAO;AAAA,IACd,KAAK,EAAE,OAAO;AAAA,IACd,KAAK,EAAE,OAAO;AAAA,IACd,SAAS,EAAE,MAAM,CAAC;AAAA,EACpB,CAAC,GAAG,EAAE,OAAO,YAAY,EAAE,MAAM,CAAC,MAAM,EAAE,MAAM,CAAC,MAAM,OAAO,EAAE,MAAM,GAAG;AAAA,IACvE,UAAU,EAAE,OAAO;AAAA,IACnB,WAAW,EAAE,OAAO;AAAA,EACtB,CAAC,IAAI,IAAI,EAAE,MAAM,GAAG,CAAC,EAAE,KAAK,MAAM,EAAE,MAAM,CAAC,GAAG,EAAE,MAAM,GAAG,KAAK,EAAE,MAAM,CAAC,MAAM,EAAE,MAAM,CAAC,EAAE,YAAY,EAAE,OAAO,WAAW,EAAE,MAAM,CAAC,EAAE,WAAW,EAAE,OAAO,UAAU,EAAE,MAAM,CAAC,MAAM,EAAE,MAAM,GAAG,CAAC,EAAE,KAAK,MAAM,EAAE,OAAO,WAAW,EAAE,OAAO,QAAQ,IAAI,IAAI,EAAE,MAAM,CAAC,MAAM,QAAQ,EAAE,SAAS,oBAAoB;AAAA,IAC1S,UAAU,EAAE,MAAM,CAAC;AAAA,IACnB,KAAK,EAAE,OAAO;AAAA,IACd,KAAK,EAAE,OAAO;AAAA,IACd,SAAS,EAAE,MAAM,CAAC;AAAA,IAClB,iBAAiB,EAAE,MAAM,CAAC;AAAA,EAC5B,CAAC,IAAI,EAAE,MAAM,GAAG,CAAC,EAAE,KAAK,MAAM,KAAK,QAAQ,EAAE,OAAO,WAAW,EAAE,OAAO,QAAQ,IAAI,IAAI,EAAE,MAAM,CAAC,MAAM,QAAQ,EAAE,SAAS,iBAAiB;AAAA,IACzI,UAAU,EAAE,MAAM,CAAC;AAAA,IACnB,SAAS,KAAK,OAAO,SAAS;AAAA,IAC9B,SAAS,KAAK,OAAO,SAAS;AAAA,IAC9B,SAAS,EAAE,MAAM,CAAC;AAAA,IAClB,WAAW;AAAA,EACb,CAAC,GAAG,EAAE,MAAM,CAAC,EAAE,aAAa,EAAE,MAAM,CAAC,EAAE,UAAU,GAAG,CAAC;AACvD;AAAA;AAAA;AAAA;AAAA;AAKA,IAAI,SAAS,GAAG,GAAG;AACjB,QAAM,IAAM,UAAU,SAAS,EAAE,YAAY,EAAE,SAAS,GAAG,IAAM,UAAU,SAAS,EAAE,WAAW,EAAE,QAAQ,GAAG,IAAI,KAAK,IAAI,IAAI,CAAC,IAAI,KAAK,IAAI,IAAI,CAAC,IAAI,KAAK,IAAM,UAAU,SAAS,EAAE,QAAQ,CAAC,IAAI,KAAK,IAAM,UAAU,SAAS,EAAE,QAAQ,CAAC,KAAK,KAAK,IAAI,IAAI,CAAC,IAAI,KAAK,IAAI,IAAI,CAAC;AACjR,SAAO,IAAI,KAAK,MAAM,KAAK,KAAK,CAAC,GAAG,KAAK,KAAK,IAAI,CAAC,CAAC,IAAI;AAC1D;AACA,IAAM,KAAN,MAAS;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAUP,YAAY,GAAG,GAAG,GAAG;AACnB,SAAK,WAAW,GAAG,KAAK,SAAS,YAAY,OAAI,KAAK,cAAc,IAAM,MAAM;AAChF,QAAI;AACJ,QAAI,IAAI,SAAS,cAAc,CAAC,KAAK,IAAI,SAAS,cAAc,OAAO,GAAG,EAAE,aAAa,YAAY,IAAE,GAAG,EAAE,aAAa,eAAe,IAAE,GAAG,EAAE,MAAM,UAAU,QAAQ,SAAS,KAAK,YAAY,CAAC,IAAI,KAAK,OAAO,IAAM,cAAc,GAAG,KAAK,UAAU,IAAM,aAAa,CAAC,GAAG,KAAK,WAAW,IAAM,kBAAkB,EAAE,KAAK,KAAK,QAAQ,CAAC;AAC5U,UAAM,IAAI,IAAM,KAAK,KAAK,MAAM,KAAK,QAAQ;AAC7C,QAAI,KAAK,YAAY,IAAI,CAAC,GAAG,KAAK,eAAe,IAAM;AAAA,MACrD;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,IACF,GAAG,UAAU,gBAAgB,UAAU,aAAa,cAAc;AAChE,YAAM,IAAI;AAAA,QACR,OAAO;AAAA,UACL,QAAQ,KAAK,OAAO,SAAS,EAAE,UAAU;AAAA,UACzC,SAAS,KAAK,OAAO,SAAS,EAAE,WAAW;AAAA,UAC3C,YAAY;AAAA,QACd;AAAA,MACF;AACA,gBAAU,aAAa,aAAa,CAAC,EAAE,KAAK,CAAC,MAAM;AACjD,gBAAQ,IAAI,kCAAkC,GAAG,EAAE,YAAY,GAAG,EAAE,KAAK;AAAA,MAC3E,CAAC,EAAE,MAAM,CAAC,MAAM;AACd,mBAAW,MAAM;AACf;AAAA,YACE;AAAA,UACF,EAAE,OAAO;AAAA,aACN,EAAE;AAAA,UACL;AAAA,QACF,GAAG,GAAG;AAAA,MACR,CAAC;AAAA,IACH;AACE,iBAAW,MAAM;AACf,cAAM,yCAAyC;AAAA,MACjD,GAAG,GAAG;AAAA,EACV;AAAA;AAAA;AAAA;AAAA;AAAA,EAKA,SAAS;AACP,SAAK,SAAS,MAAM,GAAG,KAAK,SAAS,OAAO,KAAK,aAAa,KAAK,YAAY,GAAG,KAAK,SAAS,WAAW;AAAA,EAC7G;AAAA;AAAA;AAAA;AAAA;AAAA,EAKA,UAAU;AACR,SAAK,SAAS,QAAQ,GAAG,KAAK,QAAQ,QAAQ,GAAG,KAAK,KAAK,QAAQ;AAAA,EACrE;AACF;AACA,IAAM,IAAI,UAAU,UAAU,MAAM,mBAAmB,KAAK,aAAa,KAAK,UAAU,SAAS,KAAK,UAAU,kBAAkB,QAAQ,UAAU,iBAAiB;AAArK,IAAwK,IAAI,IAAI,QAAE,GAAG,GAAG,CAAC;AAAzL,IAA4L,IAAI,IAAI,MAAE;AAAtM,IAAyM,IAAI,IAAI,WAAE;AAAnN,IAAsN,KAAK,IAAI,WAAE,CAAC,KAAK,KAAK,GAAG,GAAG,GAAG,GAAG,KAAK,KAAK,GAAG,CAAC;AAAtQ,IAAyQ,KAAK,EAAE,MAAM,SAAS;AAC/R,IAAM,KAAN,cAAiB,gBAAE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAMjB,YAAY,GAAG;AACb,UAAM,GAAG,OAAO,oBAAoB,SAAM,QAAQ;AAAA,MAChD;AAAA,IACF;AACA,UAAM,IAAI,MAAM,IAAI,MAAM,IAAI,IAAI,WAAE;AACpC,SAAK,SAAS,GAAG,KAAK,OAAO,SAAS,QAAQ,KAAK,GAAG,KAAK,UAAU,MAAI,KAAK,oBAAoB,MAAM,KAAK,oBAAoB,GAAG,KAAK,cAAc,GAAG,KAAK,gBAAgB,MAAM,KAAK,SAAS,IAAI,KAAK,IAAI,KAAK,UAAU,MAAM,KAAK,IAAI,KAAK,6BAA6B,iCAAiC,SAAS,8BAA8B,qBAAqB,KAAK,kBAAkB;AACpY,UAAM,IAAI,SAAS;AAAA,MACjB,OAAO;AAAA,MACP,MAAM;AAAA,MACN,OAAO;AAAA,MACP,sBAAsB;AAAA,IACxB,GAAG;AACD,UAAI,GAAG;AACL,cAAM,IAAI,MAAM;AAChB,UAAE,cAAc,UAAE,SAAS,IAAI,CAAC,GAAG,EAAE,oBAAoB,EAAE,OAAO,GAAG,MAAM,GAAG,OAAO,GAAG,sBAAsB,EAAE;AAAA,MAClH;AACE,YAAI,MAAM,KAAK,MAAM,EAAE,oBAAoB,EAAE,OAAO,GAAG,MAAM,GAAG,OAAO,EAAE;AAC3E,aAAO;AAAA,QACL,IAAI,YAAY,0BAA0B;AAAA,UACxC,QAAQ,EAAE,gBAAgB,EAAE,SAAS;AAAA,QACvC,CAAC;AAAA,MACH;AAAA,IACF,GAAG,IAAI,WAAW;AAChB,QAAE,oBAAoB,OAAO,eAAe;AAAA,IAC9C,GAAG,IAAI,SAAS,GAAG,GAAG,GAAG,GAAG,GAAG;AAC7B,QAAE,IAAI,GAAG,GAAG,CAAC,GAAG,KAAK,GAAG,EAAE,aAAa,CAAC,GAAG,EAAE,SAAS,EAAE,GAAG,EAAE,SAAS,EAAE,iBAAiB,GAAG,CAAC,CAAC,CAAC;AAAA,IACjG;AACA,SAAK,UAAU,WAAW;AACxB,QAAE,GAAG,OAAO,2BAA2B,UAAU,OAAO,OAAO,uBAAuB,qBAAqB,aAAa,OAAO,uBAAuB,kBAAkB,EAAE,KAAK,CAAC,MAAM;AACpL,cAAM,cAAc,OAAO;AAAA,UACzB;AAAA,UACA;AAAA,QACF,GAAG,OAAO;AAAA,UACR,EAAE;AAAA,UACF;AAAA,QACF;AAAA,MACF,CAAC,EAAE,MAAM,SAAS,GAAG;AACnB,gBAAQ;AAAA,UACN;AAAA,UACA;AAAA,QACF;AAAA,MACF,CAAC,KAAK,OAAO;AAAA,QACX;AAAA,QACA;AAAA,MACF,GAAG,OAAO;AAAA,QACR,EAAE;AAAA,QACF;AAAA,MACF,IAAI,EAAE,UAAU;AAAA,IAClB,GAAG,KAAK,aAAa,WAAW;AAC9B,aAAO;AAAA,QACL;AAAA,QACA;AAAA,MACF,GAAG,OAAO;AAAA,QACR,EAAE;AAAA,QACF;AAAA,MACF,GAAG,EAAE,UAAU,OAAI,EAAE,gBAAgB,OAAI,EAAE,oBAAoB;AAAA,IACjE,GAAG,KAAK,SAAS,SAAS,EAAE,OAAO,IAAI,EAAE,IAAI,EAAE,OAAO,EAAE,GAAG;AACzD,UAAI,EAAE,YAAY,MAAI;AACtB,YAAM,IAAI,EAAE;AACZ,UAAI,GAAG;AACL,YAAI,IAAI,EAAE,QAAQ,UAAE,SAAS,EAAE,KAAK,IAAI,EAAE,cAAc,GAAG,IAAI,EAAE,OAAO,UAAE,SAAS,EAAE,IAAI,IAAI,GAAG,IAAI,EAAE,QAAQ,UAAE,SAAS,EAAE,KAAK,IAAI;AACpI,cAAM,IAAI,EAAE,oBAAoB,UAAE,SAAS,EAAE,iBAAiB,IAAI;AAClE,YAAI,GAAG;AACL,gBAAM,IAAI,IAAI,WAAE;AAChB,YAAE,GAAG,GAAG,GAAG,GAAG,CAAC;AACf,gBAAM,IAAI,IAAI,MAAE,EAAE;AAAA,YAChB;AAAA,YACA;AAAA,UACF;AACA,kBAAQ,IAAI,EAAE,GAAG,EAAE,GAAG,EAAE,CAAC,GAAG,EAAE,IAAI,UAAE;AAAA,YAClC,MAAM,EAAE;AAAA,UACV,GAAG,EAAE,aAAa,CAAC,GAAG,EAAE,OAAO,WAAW,KAAK,CAAC;AAAA,QAClD,OAAO;AACL,cAAI,KAAK,kBAAkB,GAAG;AAC5B,gBAAI,KAAK,iBAAiB;AACxB,oBAAM,IAAI,KAAK;AACf,kBAAI,KAAK;AAAA,gBACP;AAAA,gBACA,KAAK,gBAAgB;AAAA,gBACrB;AAAA,cACF,GAAG,IAAI,KAAK;AAAA,gBACV,IAAI,KAAK;AAAA,gBACT,KAAK,gBAAgB;AAAA,gBACrB;AAAA,cACF,GAAG,IAAI,KAAK;AAAA,gBACV,IAAI,KAAK;AAAA,gBACT,KAAK,gBAAgB;AAAA,gBACrB;AAAA,gBACA,KAAK;AAAA,cACP;AAAA,YACF;AACE,mBAAK,KAAK,IAAI,KAAK,KAAK;AAC1B,iBAAK,kBAAkB;AAAA,cACrB,OAAO;AAAA,cACP,MAAM;AAAA,cACN,OAAO;AAAA,YACT;AAAA,UACF;AACA;AAAA,YACE,EAAE,OAAO;AAAA,YACT,IAAI;AAAA,YACJ,KAAK,kBAAkB,IAAI,IAAI,KAAK,KAAK;AAAA,YACzC,KAAK,kBAAkB,IAAI,IAAI,KAAK,UAAU;AAAA,YAC9C;AAAA,UACF;AAAA,QACF;AACA,aAAK,IAAI,EAAE,IAAI,EAAE,OAAO,UAAU,KAAK,MAAM,EAAE,KAAK,EAAE,OAAO,UAAU,GAAG,EAAE,cAAc,EAAE;AAAA,MAC9F;AAAA,IACF,GAAG,KAAK,cAAc,SAAS,GAAG,GAAG,IAAI,KAAK,QAAQ;AACpD,aAAO,IAAI,KAAK,KAAK,IAAI,IAAI,CAAC,IAAI,IAAI,KAAK,IAAI,KAAK,KAAK,IAAI,IAAI,CAAC,IAAI,IAAI,IAAI,EAAE,MAAM,GAAG,OAAO,EAAE,IAAI,EAAE,MAAM,GAAG,OAAO,EAAE;AAAA,IAC5H,GAAG,KAAK,oBAAoB,SAAS,GAAG,GAAG,GAAG,IAAI,KAAK,QAAQ;AAC7D,YAAM,IAAI,KAAK,YAAY,GAAG,GAAG,CAAC,GAAG,IAAI,EAAE,MAAM,IAAI,EAAE;AACvD,QAAE,OAAO,GAAG,EAAE,SAAS,GAAG,EAAE,QAAQ,MAAM,EAAE,SAAS;AACrD,UAAI,IAAI,KAAK,KAAK,IAAI,KAAK,EAAE,QAAQ,IAAI,EAAE,OAAO,IAAI,EAAE,SAAS,IAAI,KAAK,EAAE;AAC5E,aAAO,KAAK,GAAG,KAAK,MAAM,KAAK,IAAI;AAAA,IACrC,GAAG,KAAK,oBAAoB,WAAW;AACrC,QAAE,gBAAgB;AAAA,IACpB,GAAG,KAAK,UAAU,WAAW;AAC3B,QAAE,WAAW;AAAA,IACf,GAAG,KAAK,WAAW,WAAW;AAC5B,YAAM,EAAE,mBAAmB,EAAE,IAAI;AACjC,aAAO,KAAK,EAAE,QAAQ,UAAE,SAAS,EAAE,KAAK,IAAI,EAAE,cAAc;AAAA,IAC9D,GAAG,KAAK,UAAU,WAAW;AAC3B,YAAM,EAAE,mBAAmB,EAAE,IAAI;AACjC,aAAO,KAAK,EAAE,OAAO,UAAE,SAAS,EAAE,IAAI,IAAI;AAAA,IAC5C,GAAG,OAAO,2BAA2B,UAAU,OAAO,OAAO,uBAAuB,qBAAqB,aAAa,KAAK,qBAAqB,IAAI,KAAK,QAAQ;AAAA,EACnK;AAAA;AAAA;AAAA;AAAA,EAIA,uBAAuB;AACrB,UAAM,IAAI,SAAS,cAAc,KAAK,GAAG,IAAI,SAAS,cAAc,KAAK,GAAG,IAAI,SAAS,cAAc,KAAK,GAAG,IAAI,SAAS,cAAc,KAAK;AAC/I,aAAS,KAAK,YAAY,CAAC;AAC3B,UAAM,IAAI;AAAA,MACR,SAAS;AAAA,MACT,UAAU;AAAA,MACV,KAAK;AAAA,MACL,MAAM;AAAA,MACN,OAAO;AAAA,MACP,QAAQ;AAAA,MACR,QAAQ;AAAA,MACR,iBAAiB;AAAA,MACjB,gBAAgB;AAAA,MAChB,YAAY;AAAA,IACd,GAAG,IAAI;AAAA,MACL,iBAAiB;AAAA,MACjB,SAAS;AAAA,MACT,cAAc;AAAA,MACd,OAAO;AAAA,MACP,QAAQ;AAAA,IACV,GAAG,IAAI;AAAA,MACL,OAAO;AAAA,MACP,QAAQ;AAAA,MACR,SAAS;AAAA,MACT,gBAAgB;AAAA,MAChB,YAAY;AAAA,IACd,GAAG,IAAI;AAAA,MACL,SAAS;AAAA,MACT,OAAO;AAAA,MACP,QAAQ;AAAA,MACR,gBAAgB;AAAA,MAChB,YAAY;AAAA,IACd;AACA,aAAS,KAAK;AACZ,QAAE,MAAM,CAAC,IAAI,EAAE,CAAC;AAClB,aAAS,KAAK;AACZ,QAAE,MAAM,CAAC,IAAI,EAAE,CAAC;AAClB,aAAS,KAAK;AACZ,QAAE,MAAM,CAAC,IAAI,EAAE,CAAC;AAClB,aAAS,KAAK;AACZ,QAAE,MAAM,CAAC,IAAI,EAAE,CAAC;AAClB,MAAE,YAAY,CAAC,GAAG,EAAE,YAAY,CAAC,GAAG,EAAE,YAAY,CAAC,GAAG,EAAE,YAAY;AACpE,UAAM,IAAI,MAAM;AACd,WAAK,QAAQ,GAAG,EAAE,MAAM,UAAU;AAAA,IACpC,GAAG,IAAI,SAAS,cAAc,QAAQ;AACtC,MAAE,iBAAiB,SAAS,CAAC,GAAG,EAAE,MAAM,QAAQ,OAAO,EAAE,MAAM,SAAS,OAAO,EAAE,MAAM,WAAW,QAAQ,EAAE,YAAY,SAAS,eAAe,IAAI,CAAC,GAAG,EAAE,YAAY,CAAC,GAAG,SAAS,KAAK,YAAY,CAAC;AAAA,EACvM;AACF;AACA,IAAM,KAAN,MAAS;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAMP,YAAY,GAAG;AACb,SAAK,YAAY,IAAM,UAAU,GAAG,KAAK,0BAA0B,IAAM,QAAQ,MAAM,IAAI,GAAG,EAAE,WAAW,iBAAiB,SAAS,CAAC,MAAM;AAC1I,WAAK,wBAAwB;AAAA,QAC3B,EAAE,UAAU,EAAE,WAAW,cAAc,IAAI;AAAA,QAC3C,EAAE,EAAE,UAAU,EAAE,WAAW,eAAe,KAAK;AAAA,MACjD;AAAA,IACF,CAAC;AAAA,EACH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EASA,QAAQ,GAAG,GAAG;AACZ,QAAI,KAAK,wBAAwB,MAAM,QAAQ,KAAK,wBAAwB,MAAM,MAAM;AACtF,WAAK,UAAU,cAAc,KAAK,yBAAyB,CAAC;AAC5D,YAAM,IAAI,KAAK,UAAU,iBAAiB,EAAE,UAAU,KAAE;AACxD,aAAO,KAAK,wBAAwB,IAAI,MAAM,IAAI,GAAG;AAAA,IACvD;AACA,WAAO,CAAC;AAAA,EACV;AACF;",
  "names": []
}
